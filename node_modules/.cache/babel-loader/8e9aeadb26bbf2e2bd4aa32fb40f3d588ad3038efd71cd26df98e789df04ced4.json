{"ast":null,"code":"var _jsxFileName = \"/Users/sahel/Documents/David-Cours/react-rappel/src/ListCategories.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListCategories = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n\n  // Un fetch tout simplement\n  const fetchCategories = async () => {\n    const categoriesResponse = await fetch(\"https://www.themealdb.com/api/json/v1/1/categories.php\");\n    const categoriesJs = await categoriesResponse.json();\n    setCategories(categoriesJs.categories);\n  };\n  // Apres l'affichage, on choisit à quel moment on affiche\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Toutes les categories\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), categories.map(category => {\n      return (\n        /*#__PURE__*/\n        // On rentre des differents liens qui vient de l'api\n        _jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: category.strCategory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: category.strCategoryThumb,\n            alt: category.strCategory\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: category.strCategoryDescription\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)]\n        }, category.idCategory, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      );\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(ListCategories, \"+ijgB8ROEl0Dkz53OTIi8GynN6s=\");\n_c = ListCategories;\nexport default ListCategories;\nvar _c;\n$RefreshReg$(_c, \"ListCategories\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","ListCategories","_s","categories","setCategories","fetchCategories","categoriesResponse","fetch","categoriesJs","json","children","fileName","_jsxFileName","lineNumber","columnNumber","map","category","strCategory","src","strCategoryThumb","alt","strCategoryDescription","idCategory","_c","$RefreshReg$"],"sources":["/Users/sahel/Documents/David-Cours/react-rappel/src/ListCategories.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst ListCategories = () => {\n    const [categories, setCategories] = useState([]);\n\n\n    // Un fetch tout simplement\n    const fetchCategories = async () => {\n        const categoriesResponse = await fetch(\"https://www.themealdb.com/api/json/v1/1/categories.php\");\n        const categoriesJs = await categoriesResponse.json();\n\n        setCategories(categoriesJs.categories);\n    };\n    // Apres l'affichage, on choisit à quel moment on affiche\n    useEffect(() => {\n        fetchCategories();\n    }, []);\n\n    return (\n\n        <div>\n            <h4>Toutes les categories</h4>\n            {categories.map((category) => {\n                return (\n                    // On rentre des differents liens qui vient de l'api\n                    <div key={category.idCategory}>\n                        <h3>{category.strCategory}</h3>\n                        <img src={category.strCategoryThumb} alt={category.strCategory} />\n                        <p>{category.strCategoryDescription}</p>\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n\nexport default ListCategories;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAGhD;EACA,MAAMO,eAAe,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,kBAAkB,GAAG,MAAMC,KAAK,CAAC,wDAAwD,CAAC;IAChG,MAAMC,YAAY,GAAG,MAAMF,kBAAkB,CAACG,IAAI,CAAC,CAAC;IAEpDL,aAAa,CAACI,YAAY,CAACL,UAAU,CAAC;EAC1C,CAAC;EACD;EACAN,SAAS,CAAC,MAAM;IACZQ,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,oBAEIL,OAAA;IAAAU,QAAA,gBACIV,OAAA;MAAAU,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC7BX,UAAU,CAACY,GAAG,CAAEC,QAAQ,IAAK;MAC1B;QAAA;QACI;QACAhB,OAAA;UAAAU,QAAA,gBACIV,OAAA;YAAAU,QAAA,EAAKM,QAAQ,CAACC;UAAW;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC/Bd,OAAA;YAAKkB,GAAG,EAAEF,QAAQ,CAACG,gBAAiB;YAACC,GAAG,EAAEJ,QAAQ,CAACC;UAAY;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAClEd,OAAA;YAAAU,QAAA,EAAIM,QAAQ,CAACK;UAAsB;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA,GAHlCE,QAAQ,CAACM,UAAU;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIxB;MAAC;IAEd,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAACZ,EAAA,CAhCID,cAAc;AAAAsB,EAAA,GAAdtB,cAAc;AAkCpB,eAAeA,cAAc;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}